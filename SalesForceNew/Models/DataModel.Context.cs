//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalesForceNew.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SalesForceEntities : DbContext
    {
        public SalesForceEntities()
            : base("name=SalesForceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CompetitorItem> CompetitorItems { get; set; }
        public virtual DbSet<Expens> Expenses { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<Leave> Leaves { get; set; }
        public virtual DbSet<LoginDevice> LoginDevices { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Outlet> Outlets { get; set; }
        public virtual DbSet<Outstanding> Outstandings { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<POSM> POSMs { get; set; }
        public virtual DbSet<Privilage> Privilages { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Qualification> Qualifications { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Route> Routes { get; set; }
        public virtual DbSet<RouteHasOutlet> RouteHasOutlets { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Van> Vans { get; set; }
        public virtual DbSet<VanOrderProduct> VanOrderProducts { get; set; }
        public virtual DbSet<VanProduct> VanProducts { get; set; }
    
        public virtual int AddExpense(Nullable<int> userId, string date, string description, Nullable<double> amount)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddExpense", userIdParameter, dateParameter, descriptionParameter, amountParameter);
        }
    
        public virtual int AddLeave(string startingDate, string endingDate, string reason, Nullable<int> userId)
        {
            var startingDateParameter = startingDate != null ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(string));
    
            var endingDateParameter = endingDate != null ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(string));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddLeave", startingDateParameter, endingDateParameter, reasonParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddOutletsOfRoutes(Nullable<int> routeId)
        {
            var routeIdParameter = routeId.HasValue ?
                new ObjectParameter("RouteId", routeId) :
                new ObjectParameter("RouteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddOutletsOfRoutes", routeIdParameter);
        }
    
        public virtual int AddProductsToVan(Nullable<int> vanId, Nullable<int> productId, Nullable<int> vanQuantity)
        {
            var vanIdParameter = vanId.HasValue ?
                new ObjectParameter("VanId", vanId) :
                new ObjectParameter("VanId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var vanQuantityParameter = vanQuantity.HasValue ?
                new ObjectParameter("VanQuantity", vanQuantity) :
                new ObjectParameter("VanQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProductsToVan", vanIdParameter, productIdParameter, vanQuantityParameter);
        }
    
        public virtual int AddVanProducts(Nullable<int> vanId, Nullable<int> productId, Nullable<int> vanQuantity)
        {
            var vanIdParameter = vanId.HasValue ?
                new ObjectParameter("VanId", vanId) :
                new ObjectParameter("VanId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var vanQuantityParameter = vanQuantity.HasValue ?
                new ObjectParameter("VanQuantity", vanQuantity) :
                new ObjectParameter("VanQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddVanProducts", vanIdParameter, productIdParameter, vanQuantityParameter);
        }
    
        public virtual ObjectResult<AllOutletsDetails_Result> AllOutletsDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllOutletsDetails_Result>("AllOutletsDetails");
        }
    
        public virtual ObjectResult<AvailableVanProducts_Result> AvailableVanProducts(Nullable<int> vanId)
        {
            var vanIdParameter = vanId.HasValue ?
                new ObjectParameter("VanId", vanId) :
                new ObjectParameter("VanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AvailableVanProducts_Result>("AvailableVanProducts", vanIdParameter);
        }
    
        public virtual int CreateOrder(string date, Nullable<int> userId, Nullable<int> outletId, string deliveryDate, string remarks, Nullable<double> longitude, Nullable<double> latitude)
        {
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var outletIdParameter = outletId.HasValue ?
                new ObjectParameter("OutletId", outletId) :
                new ObjectParameter("OutletId", typeof(int));
    
            var deliveryDateParameter = deliveryDate != null ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(double));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOrder", dateParameter, userIdParameter, outletIdParameter, deliveryDateParameter, remarksParameter, longitudeParameter, latitudeParameter);
        }
    
        public virtual int CreateOutlet(string name, string contactNo, string barcode, Nullable<double> longitude, Nullable<double> latitude, string ownerName, string email, string status, Nullable<int> routeId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(double));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(double));
    
            var ownerNameParameter = ownerName != null ?
                new ObjectParameter("OwnerName", ownerName) :
                new ObjectParameter("OwnerName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var routeIdParameter = routeId.HasValue ?
                new ObjectParameter("RouteId", routeId) :
                new ObjectParameter("RouteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOutlet", nameParameter, contactNoParameter, barcodeParameter, longitudeParameter, latitudeParameter, ownerNameParameter, emailParameter, statusParameter, routeIdParameter);
        }
    
        public virtual int CreateOutstanding(string date, Nullable<int> outletId, Nullable<double> amount)
        {
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var outletIdParameter = outletId.HasValue ?
                new ObjectParameter("OutletId", outletId) :
                new ObjectParameter("OutletId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOutstanding", dateParameter, outletIdParameter, amountParameter);
        }
    
        public virtual int CreatePayment(Nullable<int> orderId, string paymentType, Nullable<double> amount)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatePayment", orderIdParameter, paymentTypeParameter, amountParameter);
        }
    
        public virtual int CreateProduct(string name, string brand, string category, Nullable<double> manufacturePrice, Nullable<double> retailPrice, Nullable<int> quantity, Nullable<double> discountType)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var manufacturePriceParameter = manufacturePrice.HasValue ?
                new ObjectParameter("ManufacturePrice", manufacturePrice) :
                new ObjectParameter("ManufacturePrice", typeof(double));
    
            var retailPriceParameter = retailPrice.HasValue ?
                new ObjectParameter("RetailPrice", retailPrice) :
                new ObjectParameter("RetailPrice", typeof(double));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var discountTypeParameter = discountType.HasValue ?
                new ObjectParameter("DiscountType", discountType) :
                new ObjectParameter("DiscountType", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateProduct", nameParameter, brandParameter, categoryParameter, manufacturePriceParameter, retailPriceParameter, quantityParameter, discountTypeParameter);
        }
    
        public virtual int createProductsToVan(Nullable<int> vanId, Nullable<int> productId, Nullable<int> vanQuantity)
        {
            var vanIdParameter = vanId.HasValue ?
                new ObjectParameter("VanId", vanId) :
                new ObjectParameter("VanId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var vanQuantityParameter = vanQuantity.HasValue ?
                new ObjectParameter("VanQuantity", vanQuantity) :
                new ObjectParameter("VanQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createProductsToVan", vanIdParameter, productIdParameter, vanQuantityParameter);
        }
    
        public virtual int CreateRoute(string name, string description)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateRoute", nameParameter, descriptionParameter);
        }
    
        public virtual int CreateRouteHasOutlets(Nullable<System.DateTime> date, Nullable<int> userId, Nullable<int> outletId, Nullable<int> vanId)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var outletIdParameter = outletId.HasValue ?
                new ObjectParameter("OutletId", outletId) :
                new ObjectParameter("OutletId", typeof(int));
    
            var vanIdParameter = vanId.HasValue ?
                new ObjectParameter("VanId", vanId) :
                new ObjectParameter("VanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateRouteHasOutlets", dateParameter, userIdParameter, outletIdParameter, vanIdParameter);
        }
    
        public virtual int CreateUser(string nIC, string username, string password, string firstName, string lastName, string residenceNo, string lane, string city, string contactNo, string email, string gender, string userType)
        {
            var nICParameter = nIC != null ?
                new ObjectParameter("NIC", nIC) :
                new ObjectParameter("NIC", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var residenceNoParameter = residenceNo != null ?
                new ObjectParameter("ResidenceNo", residenceNo) :
                new ObjectParameter("ResidenceNo", typeof(string));
    
            var laneParameter = lane != null ?
                new ObjectParameter("Lane", lane) :
                new ObjectParameter("Lane", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateUser", nICParameter, usernameParameter, passwordParameter, firstNameParameter, lastNameParameter, residenceNoParameter, laneParameter, cityParameter, contactNoParameter, emailParameter, genderParameter, userTypeParameter);
        }
    
        public virtual int CreateVan(string vanType, string registrationNo)
        {
            var vanTypeParameter = vanType != null ?
                new ObjectParameter("VanType", vanType) :
                new ObjectParameter("VanType", typeof(string));
    
            var registrationNoParameter = registrationNo != null ?
                new ObjectParameter("RegistrationNo", registrationNo) :
                new ObjectParameter("RegistrationNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateVan", vanTypeParameter, registrationNoParameter);
        }
    
        public virtual int CreateVanOrder(string date, Nullable<int> userId, Nullable<int> outletId, string remarks, Nullable<double> longitude, Nullable<double> latitude)
        {
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var outletIdParameter = outletId.HasValue ?
                new ObjectParameter("OutletId", outletId) :
                new ObjectParameter("OutletId", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(double));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateVanOrder", dateParameter, userIdParameter, outletIdParameter, remarksParameter, longitudeParameter, latitudeParameter);
        }
    
        public virtual int CreateVanOrderProducts(Nullable<int> orderId, Nullable<int> productId, Nullable<int> productQuantity)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var productQuantityParameter = productQuantity.HasValue ?
                new ObjectParameter("ProductQuantity", productQuantity) :
                new ObjectParameter("ProductQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateVanOrderProducts", orderIdParameter, productIdParameter, productQuantityParameter);
        }
    
        public virtual int CreateVanOrderProducts2(Nullable<int> orderId, Nullable<int> productId, Nullable<int> productQuantity, string orderType)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var productQuantityParameter = productQuantity.HasValue ?
                new ObjectParameter("ProductQuantity", productQuantity) :
                new ObjectParameter("ProductQuantity", typeof(int));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateVanOrderProducts2", orderIdParameter, productIdParameter, productQuantityParameter, orderTypeParameter);
        }
    
        public virtual int DeleteProduct(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProduct", idParameter);
        }
    
        public virtual int DeleteRoute(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRoute", idParameter);
        }
    
        public virtual int DeleteVan(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVan", idParameter);
        }
    
        public virtual ObjectResult<ExpensesDetails_Result> ExpensesDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExpensesDetails_Result>("ExpensesDetails");
        }
    
        public virtual ObjectResult<Nullable<int>> GetOrderId(string date, Nullable<int> userId, Nullable<int> outletId)
        {
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var outletIdParameter = outletId.HasValue ?
                new ObjectParameter("OutletId", outletId) :
                new ObjectParameter("OutletId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetOrderId", dateParameter, userIdParameter, outletIdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> GetProductPrice(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("GetProductPrice", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetVanId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetVanId", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> LatestOutstanding(Nullable<int> outletId)
        {
            var outletIdParameter = outletId.HasValue ?
                new ObjectParameter("OutletId", outletId) :
                new ObjectParameter("OutletId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("LatestOutstanding", outletIdParameter);
        }
    
        public virtual ObjectResult<LeaveDetails_Result> LeaveDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LeaveDetails_Result>("LeaveDetails");
        }
    
        public virtual ObjectResult<OrderedProducts_Result> OrderedProducts(Nullable<int> outletId)
        {
            var outletIdParameter = outletId.HasValue ?
                new ObjectParameter("OutletId", outletId) :
                new ObjectParameter("OutletId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderedProducts_Result>("OrderedProducts", outletIdParameter);
        }
    
        public virtual ObjectResult<OutletDetails_Result> OutletDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OutletDetails_Result>("OutletDetails");
        }
    
        public virtual ObjectResult<OutletsOfTheRoute_Result> OutletsOfTheRoute(Nullable<int> routeId)
        {
            var routeIdParameter = routeId.HasValue ?
                new ObjectParameter("RouteId", routeId) :
                new ObjectParameter("RouteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OutletsOfTheRoute_Result>("OutletsOfTheRoute", routeIdParameter);
        }
    
        public virtual ObjectResult<OutletsSalesSummary_Result> OutletsSalesSummary(Nullable<int> outletId, Nullable<int> month, Nullable<int> year)
        {
            var outletIdParameter = outletId.HasValue ?
                new ObjectParameter("OutletId", outletId) :
                new ObjectParameter("OutletId", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OutletsSalesSummary_Result>("OutletsSalesSummary", outletIdParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<OutstandingDetails_Result> OutstandingDetails(Nullable<int> outletId)
        {
            var outletIdParameter = outletId.HasValue ?
                new ObjectParameter("OutletId", outletId) :
                new ObjectParameter("OutletId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OutstandingDetails_Result>("OutstandingDetails", outletIdParameter);
        }
    
        public virtual ObjectResult<ProductById_Result> ProductById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductById_Result>("ProductById", idParameter);
        }
    
        public virtual ObjectResult<ProductDetails_Result> ProductDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetails_Result>("ProductDetails");
        }
    
        public virtual ObjectResult<RouteDetails_Result> RouteDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RouteDetails_Result>("RouteDetails");
        }
    
        public virtual ObjectResult<RouteDetailsById_Result> RouteDetailsById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RouteDetailsById_Result>("RouteDetailsById", idParameter);
        }
    
        public virtual ObjectResult<RoutesSalesSummary_Result> RoutesSalesSummary(Nullable<int> routeId, Nullable<int> month, Nullable<int> year)
        {
            var routeIdParameter = routeId.HasValue ?
                new ObjectParameter("RouteId", routeId) :
                new ObjectParameter("RouteId", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoutesSalesSummary_Result>("RoutesSalesSummary", routeIdParameter, monthParameter, yearParameter);
        }
    
        public virtual int UpdateExpenses(Nullable<int> expenseId, string status)
        {
            var expenseIdParameter = expenseId.HasValue ?
                new ObjectParameter("ExpenseId", expenseId) :
                new ObjectParameter("ExpenseId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateExpenses", expenseIdParameter, statusParameter);
        }
    
        public virtual int UpdateLeave(Nullable<int> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateLeave", idParameter, statusParameter);
        }
    
        public virtual int UpdateOutlets(Nullable<int> id, string name, string contactNo, Nullable<double> longitude, Nullable<double> latitude, string ownerName, string email, string status, Nullable<int> routeId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(double));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(double));
    
            var ownerNameParameter = ownerName != null ?
                new ObjectParameter("OwnerName", ownerName) :
                new ObjectParameter("OwnerName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var routeIdParameter = routeId.HasValue ?
                new ObjectParameter("RouteId", routeId) :
                new ObjectParameter("RouteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOutlets", idParameter, nameParameter, contactNoParameter, longitudeParameter, latitudeParameter, ownerNameParameter, emailParameter, statusParameter, routeIdParameter);
        }
    
        public virtual int UpdateProduct(Nullable<int> id, string name, string brand, string category, Nullable<double> manufacturePrice, Nullable<double> retailPrice, Nullable<int> quantity, Nullable<double> discountType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var manufacturePriceParameter = manufacturePrice.HasValue ?
                new ObjectParameter("ManufacturePrice", manufacturePrice) :
                new ObjectParameter("ManufacturePrice", typeof(double));
    
            var retailPriceParameter = retailPrice.HasValue ?
                new ObjectParameter("RetailPrice", retailPrice) :
                new ObjectParameter("RetailPrice", typeof(double));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var discountTypeParameter = discountType.HasValue ?
                new ObjectParameter("DiscountType", discountType) :
                new ObjectParameter("DiscountType", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProduct", idParameter, nameParameter, brandParameter, categoryParameter, manufacturePriceParameter, retailPriceParameter, quantityParameter, discountTypeParameter);
        }
    
        public virtual int UpdateProductAfterOrder(Nullable<int> productQuantity, Nullable<int> productId)
        {
            var productQuantityParameter = productQuantity.HasValue ?
                new ObjectParameter("ProductQuantity", productQuantity) :
                new ObjectParameter("ProductQuantity", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProductAfterOrder", productQuantityParameter, productIdParameter);
        }
    
        public virtual int UpdateRoute(Nullable<int> id, string name, string description)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRoute", idParameter, nameParameter, descriptionParameter);
        }
    
        public virtual int UpdateUser(Nullable<int> id, string nIC, string username, string passwords, string firstName, string lastName, string residenceNo, string lane, string city, string contactNo, string email, string userType, string gender)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nICParameter = nIC != null ?
                new ObjectParameter("NIC", nIC) :
                new ObjectParameter("NIC", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordsParameter = passwords != null ?
                new ObjectParameter("Passwords", passwords) :
                new ObjectParameter("Passwords", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var residenceNoParameter = residenceNo != null ?
                new ObjectParameter("ResidenceNo", residenceNo) :
                new ObjectParameter("ResidenceNo", typeof(string));
    
            var laneParameter = lane != null ?
                new ObjectParameter("Lane", lane) :
                new ObjectParameter("Lane", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", idParameter, nICParameter, usernameParameter, passwordsParameter, firstNameParameter, lastNameParameter, residenceNoParameter, laneParameter, cityParameter, contactNoParameter, emailParameter, userTypeParameter, genderParameter);
        }
    
        public virtual int UpdateVan(Nullable<int> id, string vanType, string registrationNo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var vanTypeParameter = vanType != null ?
                new ObjectParameter("VanType", vanType) :
                new ObjectParameter("VanType", typeof(string));
    
            var registrationNoParameter = registrationNo != null ?
                new ObjectParameter("RegistrationNo", registrationNo) :
                new ObjectParameter("RegistrationNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVan", idParameter, vanTypeParameter, registrationNoParameter);
        }
    
        public virtual int UpdateVanProductAfterOrder(Nullable<int> productQuantity, Nullable<int> productId, Nullable<int> vanId)
        {
            var productQuantityParameter = productQuantity.HasValue ?
                new ObjectParameter("ProductQuantity", productQuantity) :
                new ObjectParameter("ProductQuantity", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var vanIdParameter = vanId.HasValue ?
                new ObjectParameter("VanId", vanId) :
                new ObjectParameter("VanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVanProductAfterOrder", productQuantityParameter, productIdParameter, vanIdParameter);
        }
    
        public virtual ObjectResult<UserById_Result> UserById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserById_Result>("UserById", idParameter);
        }
    
        public virtual ObjectResult<UserDetails_Result> UserDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDetails_Result>("UserDetails");
        }
    
        public virtual ObjectResult<UsersExpensesDetails_Result> UsersExpensesDetails(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersExpensesDetails_Result>("UsersExpensesDetails", userIdParameter);
        }
    
        public virtual ObjectResult<UsersLeaveDetails_Result> UsersLeaveDetails(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersLeaveDetails_Result>("UsersLeaveDetails", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UsersOutlets(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UsersOutlets", userIdParameter);
        }
    
        public virtual ObjectResult<UsersSalesSummary_Result> UsersSalesSummary(Nullable<int> userId, Nullable<int> month, Nullable<int> year)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersSalesSummary_Result>("UsersSalesSummary", userIdParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<UsersTodayOutelts_Result> UsersTodayOutelts(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersTodayOutelts_Result>("UsersTodayOutelts", userIdParameter);
        }
    
        public virtual ObjectResult<UsersVanProductDetails_Result> UsersVanProductDetails(Nullable<int> userId, Nullable<int> outletId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var outletIdParameter = outletId.HasValue ?
                new ObjectParameter("OutletId", outletId) :
                new ObjectParameter("OutletId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersVanProductDetails_Result>("UsersVanProductDetails", userIdParameter, outletIdParameter);
        }
    
        public virtual ObjectResult<VanDetails_Result> VanDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VanDetails_Result>("VanDetails");
        }
    
        public virtual ObjectResult<VanDetailsById_Result> VanDetailsById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VanDetailsById_Result>("VanDetailsById", idParameter);
        }
    
        public virtual ObjectResult<VanProductDetails_Result> VanProductDetails(Nullable<int> vanId)
        {
            var vanIdParameter = vanId.HasValue ?
                new ObjectParameter("VanId", vanId) :
                new ObjectParameter("VanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VanProductDetails_Result>("VanProductDetails", vanIdParameter);
        }
    }
}
